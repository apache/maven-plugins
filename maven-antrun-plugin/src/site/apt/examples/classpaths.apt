 ------
 Using the classpaths
 ------
 Carlos Sanchez, Franz Allan Valencia See
 ------
 27 July 2006
 ------

~~ Copyright 2006 The Apache Software Foundation.
~~
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~
~~      http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/guides/mini/guide-apt-format.html

Referencing the Maven Classpaths

 You can use these classpath references:
  
  * <<<maven.dependency.classpath>>> (deprecated, equal to <<<maven.compile.classpath>>>)

  * <<<maven.compile.classpath>>>

  * <<<maven.runtime.classpath>>>

  * <<<maven.test.classpath>>>

  * <<<maven.plugin.classpath>>>
  

 For example, in using optional ant tasks, we can set our <<<target>>>'s 
 classpath to the maven plugin's classpath, and it's output directory to 
 "target".

------
<project>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>my-test-app</artifactId>
  <groupId>my-test-group</groupId>
  <version>1.0-SNAPSHOT</version>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>compile</id>
            <phase>compile</phase>
            <configuration>
              <tasks>
                <antlr target="calc.g" outputdirectory="target">
                  <classpath refid="maven.plugin.classpath"/>
                </antlr>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>ant</groupId>
            <artifactId>ant-antlr</artifactId>
            <version>1.6.5</version>
          </dependency>
          <dependency>
            <groupId>antlr</groupId>
            <artifactId>antlrall</artifactId>
            <version>2.7.4</version>
          </dependency>
        </dependencies>
      </plugin>

    </plugins>
  </build>
</project>
------

 or alternatively, we can use an external <<<build.xml>>> (<note the 
 <<<inheritRefs>>> property so the classpath references are passed to the 
 <<<build.xml>>>>)

------
<project>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>my-test-app</artifactId>
  <groupId>my-test-group</groupId>
  <version>1.0-SNAPSHOT</version>

  <build>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>compile</id>
            <phase>compile</phase>
            <configuration>
              <tasks>
                <ant antfile="${basedir}/build.xml" inheritRefs="true">
                  <target name="test"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>ant</groupId>
            <artifactId>ant-antlr</artifactId>
            <version>1.6.5</version>
          </dependency>
          <dependency>
            <groupId>antlr</groupId>
            <artifactId>antlrall</artifactId>
            <version>2.7.4</version>
          </dependency>
        </dependencies>
      </plugin>

    </plugins>
  </build>
</project>
------

 The <<<build.xml>>>:

------
<?xml version="1.0"?>
<project name="test6">

    <target name="test">

        <antlr target="calc.g" outputdirectory="target">
            <classpath refid="maven.plugin.classpath"/>
        </antlr>

    </target>

</project>
------
