/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import java.io.*;

import org.codehaus.plexus.util.*;

String actual = FileUtils.fileRead( new File( basedir, "target/tree.txt" ) );
String expected = FileUtils.fileRead( new File( basedir, "expected.txt" ) );

actual = actual.replaceAll( "[\n\r]+", "\n" );
expected = expected.replaceAll( "[\n\r]+", "\n" );

System.out.println( "Checking root dependency tree..." );

if ( !actual.equals( expected ) )
{
    throw new Exception( "Unexpected root dependency tree" );
}

actual = FileUtils.fileRead( new File( basedir, "module-a/target/tree.txt" ) );
expected = FileUtils.fileRead( new File( basedir, "module-a/expected.txt" ) );

actual = actual.replaceAll( "[\n\r]+", "\n" );
expected = expected.replaceAll( "[\n\r]+", "\n" );

System.out.println( "Checking module-a dependency tree..." );

if ( !actual.equals( expected ) )
{
    throw new Exception( "Unexpected module-a dependency tree" );
}

actual = FileUtils.fileRead( new File( basedir, "module-b/target/tree.txt" ) );
expected = FileUtils.fileRead( new File( basedir, "module-b/expected.txt" ) );

actual = actual.replaceAll( "[\n\r]+", "\n" );
expected = expected.replaceAll( "[\n\r]+", "\n" );

System.out.println( "Checking module-b dependency tree..." );

if ( !actual.equals( expected ) )
{
    throw new Exception( "Unexpected module-b dependency tree" );
}

return true;
