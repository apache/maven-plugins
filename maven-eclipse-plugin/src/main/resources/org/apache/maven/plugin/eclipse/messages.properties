EclipsePlugin.missingpom=There must be a POM in the current working directory for the Eclipse plugin to work.
EclipsePlugin.pompackaging=Not running eclipse plugin goal for pom project
EclipsePlugin.notadir=Not a directory: "{0}"
EclipsePlugin.cantcreatedir=Can't create directory "{0}"
EclipsePlugin.erroropeningfile=Exception while opening file.
EclipsePlugin.cantwritetofile=Unable to write to file: {0}
EclipsePlugin.cantfindresource=Unable to resolve resource location: {0}
EclipsePlugin.cantreadfile=Unable to read file: {0}
EclipsePlugin.keepexisting=File {0} already exists.\n       Additional settings will be preserved, run mvn eclipse:clean if you want old settings to be removed.
EclipsePlugin.cantparseexisting=Unable to parse existing file: {0}. Settings will not be preserved.
EclipsePlugin.wrote=Wrote Eclipse project for "{0}" to {1}.
EclipsePlugin.missingelement=Missing element from the project descriptor: "{0}"
EclipsePlugin.artifactpathisnull=The artifact path was null. Artifact id: {0}
EclipsePlugin.artifactissystemscoped=The artifact has scope 'system'. Artifact id: {0}. System path: {1}
EclipsePlugin.unsupportedwtp=Unsupported WTP version: {0}. This plugin currently supports only the following versions: {1}.
EclipsePlugin.wtpversion=Adding support for WTP version {0}.
EclipsePlugin.missingjrecontainer=You did specify a list of classpath containers without the base org.eclipse.jdt.launching.JRE_CONTAINER.\n       If you specify custom classpath containers you should also add org.eclipse.jdt.launching.JRE_CONTAINER to the list
EclipsePlugin.deprecatedpar=Plugin parameter "{0}" is deprecated, please use "{1}"
EclipsePlugin.foundadir={0} is a directory, ignoring.
EclipsePlugin.workspace=Using Eclipse Workspace: {0}
EclipsePlugin.cantcanonicalize=Can't canonicalize system path: {0}
EclipsePlugin.unchangedmanifest=Not writing Manifest file as it is unchanged: {0}
EclipsePlugin.invalidvminworkspace=Workspace defines a VM that does not contain a valid jre/lib/rt.jar: {0}

EclipseSettingsWriter.wrotesettings=Wrote settings to {0}
EclipseSettingsWriter.cannotcreatesettings=Cannot create settings file
EclipseSettingsWriter.errorwritingsettings=Error writing settings file
EclipseSettingsWriter.usingdefaults=Not writing settings - defaults suffice
 
EclipseProjectWriter.notafile=Not adding a file link to {0}; it is not a file

EclipseCleanMojo.failedtodelete=Failed to delete {0} file: {0}
EclipseCleanMojo.nofilefound=No {0} file found
EclipseCleanMojo.deletingFile=Deleting file: {0}
EclipseCleanMojo.deletingDirectory=Deleting directory: {0}

EclipseOSGiManifestWriter.nomanifestfile=The references manifest file doesn't exist, plugin dependencies will not be updated: {0}

Rad6LibCopier.cantdeletefile=Failed to delete file: {0}

MyEclipseSpringBeansWriter.baseDirDoesNotExist=The (basedir) path declared in the project's dependencies doesn't exist: {0}

EclipseToMavenMojo.eclipseDirectoryPrompt=Eclipse directory? 
EclipseToMavenMojo.errorreadingfromstandardinput=Unable to read from standard input
EclipseToMavenMojo.directoydoesnotexist=Directory {0} doesn't exists
EclipseToMavenMojo.plugindirectorydoesnotexist=Plugin directory {0} doesn't exists
EclipseToMavenMojo.remoterepositorydeployto=Will deploy artifacts to remote repository {0} 
EclipseToMavenMojo.processingfile=Processing file {0}
EclipseToMavenMojo.processingplugin=Processing {0} of {1}
EclipseToMavenMojo.skippingfile=Skipping file {0}
EclipseToMavenMojo.unabletoresolveversionrange=Unable to resolve version range for dependency {0} in project {1}
EclipseToMavenMojo.unabletoaccessjar=Unable to access jar {0}
EclipseToMavenMojo.plugindoesnothavemanifest=Plugin {0} does not have a manifest; skipping..
EclipseToMavenMojo.unabletoreadbundlefrommanifest=Unable to read bundle name/version from manifest, skipping...
EclipseToMavenMojo.errorprocessingplugin=Error processing plugin {0}
EclipseToMavenMojo.errorwritingtemporarypom=Error writing temporary pom file: {0}
EclipseToMavenMojo.errordeployartifacttorepository=Unable to deploy artifact to repository.
EclipseToMavenMojo.errorinstallartifacttorepository=Unable to install artifact to repository.
EclipseToMavenMojo.errorgettingjarfileforplugin=Error getting the jar file for plugin {0}
EclipseToMavenMojo.invalidsyntaxforrepository=Invalid syntax for repository.
EclipseToMavenMojo.invalidremoterepositorysyntax=Invalid syntax for remote repository. Use "id::layout::url".
EclipseToMavenMojo.cannotfindrepositorylayout=Cannot find repository layout: {0}
EclipseToMavenMojo.missingversionforbundle=Missing version for bundle {0}, assuming any version > 0

AbstractIdeSupportMojo.sourcesnotavailable=\n       Sources for some artifacts are not available.\n       List of artifacts without a source archive:
AbstractIdeSupportMojo.sourcesnotdownloaded=\n       Sources for some artifacts are not available.\n       Please run the same goal with the -DdownloadSources=true parameter in order to check remote repositories for sources.\n       List of artifacts without a source archive:
AbstractIdeSupportMojo.sourcesmissingitem=\n         o {0}
AbstractIdeSupportMojo.javadocnotavailable=\n       Javadoc for some artifacts is not available.\n       List of artifacts without a javadoc archive:
AbstractIdeSupportMojo.javadocnotdownloaded=\n       Javadoc for some artifacts is not available.\n       Please run the same goal with the -DdownloadJavadocs=true parameter in order to check remote repositories for javadoc.\n       List of artifacts without a javadoc archive:
AbstractIdeSupportMojo.javadocmissingitem=\n         o {0}
AbstractIdeSupportMojo.artifactresolution=An error occurred during dependency resolution of the following artifact:\n    {0}:{1}:{2}\nCaused by: {3}
AbstractIdeSupportMojo.artifactdownload=An error occurred during dependency resolution.\n    Failed to retrieve {0}:{1}-{2}\nCaused by: {3}
AbstractIdeSupportMojo.unabletoparseversion={0}: unable to parse version '{1}' for dependency '{2}': {3}
AbstractIdeSupportMojo.failedtocreatenotavailablemarkerfile=Error creating not available file {0}
AbstractIdeSupportMojo.creatednotavailablemarkerfile=Not available marker file created: {0}
AbstractIdeSupportMojo.unabletodeletenotavailablemarkerfile=Unable to delete marker file: {0}

IdeUtils.errorresolving=Error resolving {0} artifact. Artifact id: {1} (Message: {2})

RemoveCacheMojo.checking=Checking cache for not available markers
RemoveCacheMojo.complete=Done
