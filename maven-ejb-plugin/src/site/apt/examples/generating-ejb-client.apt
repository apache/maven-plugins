 ------
 Generating an EJB client
 ------
 Stephane Nicoll
 <snicoll@apache.org>
 Pete Marvin King
 ------
 2008-07-07
 ------

 ~~ Licensed to the Apache Software Foundation (ASF) under one
 ~~ or more contributor license agreements.  See the NOTICE file
 ~~ distributed with this work for additional information
 ~~ regarding copyright ownership.  The ASF licenses this file
 ~~ to you under the Apache License, Version 2.0 (the
 ~~ "License"); you may not use this file except in compliance
 ~~ with the License.  You may obtain a copy of the License at
 ~~
 ~~   http://www.apache.org/licenses/LICENSE-2.0
 ~~
 ~~ Unless required by applicable law or agreed to in writing,
 ~~ software distributed under the License is distributed on an
 ~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~~ KIND, either express or implied.  See the License for the
 ~~ specific language governing permissions and limitations
 ~~ under the License.

 ~~ NOTE: For help with the syntax of this file, see:
 ~~ http://maven.apache.org/doxia/references/apt-format.html


Generating an EJB client

 Normally a thick-client application would only need the stubs and utility classes of the EJB project.
 The EJB Plugin is capable of generating an EJB jar for client use.

 To generate the ejb-client jar, you need to set <<<generateClient>>> to <<<true>>> in the plugin's configuration:

+--------+
  [...]
  <build>
    [...]
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-ejb-plugin</artifactId>
        <configuration>
          <!-- this is false by default -->
          <generateClient>true</generateClient>
        </configuration>
      </plugin>
    </plugins>
    [...]
  </build>
  [...]
+---------+

* Client inclusions and exclusions

  The content of the ejb-client archive can also be customized using inclusions and exclusions.

** Default Exclusions:

  *<<<\*\*/\*Bean.class>>>

  *<<<\*\*/\*CMP.class>>>

  *<<<\*\*/\*Session.class>>>

  *<<<\*\*/package.html>>>

  []

  To customize this, use the <<<clientExcludes>>> and <<<clientIncludes>>> elements:

+--------+
  [...]
  <build>
    [...]
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-ejb-plugin</artifactId>
        <configuration>
          <clientIncludes>
             <!-- this will include all files and directories under com/foo/bar -->
             <clientInclude>com/foo/bar/**</clientInclude>
             <!-- this will include all files and directories under com/foo/acme -->
             <clientInclude>com/foo/acme/**</clientInclude>
             <!-- this will include all files under com/example -->
             <clientInclude>com/example/*</clientInclude>
          </clientIncludes>
          <clientExcludes>
             <!-- this will exclude all files under com/example -->
             <clientExclude>com/example/*</clientExclude>
             <!-- this will exclude all files and directories with the name
                  sparrow under com/jack -->
             <clientExclude>com/jack/**/sparrow</clientExclude>
          </clientExcludes>
        </configuration>
      </plugin>
    </plugins>
    [...]
  </build>
  [...]
+---------+

 <<Note:>> Be careful when mixing excludes and includes, excludes will have a higher priority than includes.
