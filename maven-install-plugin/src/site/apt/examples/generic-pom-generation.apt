  ----
  Generating a generic POM
  ------
  Allan Ramirez
  ------
  2009-03-22
  ------

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

Generating a generic POM

  There are times when you do not have a POM for a 3rd party artifact.
  For instance, when installing a proprietary or commercial JAR into a repository.
  The Install Plugin can create a generic POM in this case which
  contains the minimal set of POM elements required by Maven, such as groupId,
  artifactId, version, packaging.  You tell Maven to generate a POM by setting the
  <<<generatePom>>> parameter to <<<true>>>.

+---+
mvn install:install-file  -Dfile=path-to-your-artifact-jar \
                          -DgroupId=your.groupId \
                          -DartifactId=your-artifactId \
                          -Dversion=version \
                          -Dpackaging=jar \
                          -DgeneratePom=true
+---+
