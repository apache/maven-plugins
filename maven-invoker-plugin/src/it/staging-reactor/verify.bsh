import java.io.*;
import java.util.*;
import java.util.regex.*;

try
{
    File itRepoDir = new File( basedir, "mod1/target/it-repo" );
    System.out.println( "Checking for existence of: " + itRepoDir );
    if ( !itRepoDir.isDirectory() )
    {
        System.out.println( "FAILED!" );
        return false;
    }

    // NOTE: Checking the metadata is included to guard against regression of MINVOKER-43
    String[] files = {
            "test/mod1/maven-metadata-local.xml",
            "test/mod1/1.0-SNAPSHOT/maven-metadata-local.xml",
            "test/mod1/1.0-SNAPSHOT/mod1-1.0-SNAPSHOT.pom",
            "test/mod1/1.0-SNAPSHOT/mod1-1.0-SNAPSHOT.jar",
            "test/mod1-parent/maven-metadata-local.xml",
            "test/mod1-parent/1.0-SNAPSHOT/maven-metadata-local.xml",
            "test/mod1-parent/1.0-SNAPSHOT/mod1-parent-1.0-SNAPSHOT.pom",
            "test/mod2/maven-metadata-local.xml",
            "test/mod2/1.0-SNAPSHOT/maven-metadata-local.xml",
            "test/mod2/1.0-SNAPSHOT/mod2-1.0-SNAPSHOT.pom",
            "test/mod2/1.0-SNAPSHOT/mod2-1.0-SNAPSHOT.jar",
            "test/mod2/1.0-SNAPSHOT/mod2-1.0-SNAPSHOT-sources.jar",
            "test/mod2-parent/maven-metadata-local.xml",
            "test/mod2-parent/1.0-SNAPSHOT/maven-metadata-local.xml",
            "test/mod2-parent/1.0-SNAPSHOT/mod2-parent-1.0-SNAPSHOT.pom",
      };
    for ( String file : files )
    {
        File stagedFile = new File( itRepoDir, file );
        System.out.println( "Checking for existence of: " + stagedFile );
        if ( !stagedFile.isFile() )
        {
            System.out.println( "FAILED!" );
            return false;
        }
    }
}
catch( Throwable t )
{
    t.printStackTrace();
    return false;
}

return true;
