 ------
 Fast Build Configuration
 ------
 Olivier Lamy
 ------
 01 May 2008
 ------

Fast Invoker Plugin Configuration

  If you follow the recommended approach and use a dedicated local repository for the integration tests (e.g.
  <<<target/local-repo>>>), you will likely encounter long build times. If the test repository has been cleaned, the
  plugin needs to re-download all artifacts from the central repo and the resulting network traffic slows the test
  execution down.

  But you can configure the plugin to download released artifacts from your local repo.
  <Note:> This will work without optional settings with Maven >= 2.0.9 because many plugins 
  versions are locked in the super POM. For older versions, you have to lock plugins versions.
  
  To enable this feature, you have to add a <<<settings.xml>>> file in your project (for example in <<<src/it/settings.xml>>>)
  and modify the plugin configuration as this:  
  
-------------------
<project>
  ...
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-invoker-plugin</artifactId>
        <version>1.3</version>
        <configuration>
          ...
          <settingsFile>src/it/settings.xml</settingsFile>
          ...              
        </configuration>
      </plugin>
    </plugins>
  </build>
  ...
</project>
-------------------

  The settings must contain the following content which effectively tells Maven to use the local repository as a remote
  repository:
  
-------------------
<?xml version="1.0"?>
<settings>
  <profiles>
    <profile>
      <id>it-repo</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <repositories>
        <repository>
          <id>local</id>
          <url>file://@localRepository@</url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <id>local</id>
          <url>file://@localRepository@</url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </pluginRepository>
      </pluginRepositories>
    </profile>
  </profiles>
</settings>
-------------------  

  The token <<<@localRepository@>>> will be automatically replaced by the Invoker Plugin with the path to the local
  repository used for the Maven invocation.

  <<Warning:>> It is important to use the identifier "local" for the repositories. Otherwise, it is possible that Maven
  downloads artifacts from an external repository instead of using the artifacts that have just been installed into the
  testing repository. This imposes the risk of running the integration tests with outdated (snapshot) artifacts. The
  reason for this is the way the repository metadata files are named: <<<maven-metadata-\<id\>.xml>>>. During staging
  of the test artifacts into the local repository, <<<maven-metadata-local.xml>>> files will be created. If the
  identifier "foo" would be used for the remote repository in the <<<settings.xml>>>, Maven would look for metadata in
  <<<maven-metadata-foo.xml>>> and would as such miss the already existing metadata.
