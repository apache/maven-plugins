
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import java.io.*;
import java.util.*;

File target = new File( basedir, "target" );
if ( !target.isDirectory() )
{
    throw new IOException( "target file is missing or not a directory: " + target );
}

File jarFile = new File ( target, "MJAR-70-recreation-1.0-SNAPSHOT.jar" );
if ( !jarFile.isFile() )
{
    throw new IOException( "artifact file is missing or a directory: " + jarFile );
}

File refFile = new File ( target, "reference.jar" );
if ( !refFile.isFile() )
{
    throw new IOException( "reference file is missing or a directory: " + refFile );
}

long referenceTimestamp = refFile.lastModified();
System.out.println( "Reference timestamp: " + referenceTimestamp );

long actualTimestamp = jarFile.lastModified();
System.out.println( "Actual timestamp   : " + actualTimestamp );

if ( referenceTimestamp >= actualTimestamp)
{
    throw new Exception( "Timestamps match, JAR was not recreated although forced by configuration" );
}

return true;
