 ------
 Usage
 ------
 Vincent Siveton
 Maria Odea Ching
 ------
 27 June 2006
 ------

How To Use

 The Javadoc Plugin generates javadocs using the Javadoc tool. Iterated below are the different goals and configuration for
 generating them using the plugin.

* Generate Javadocs As Part of Project Reports

 To generate javadocs as part of the site generation, you must configure the following in the \<reporting\> section of your pom:

+-----+
<project>
...
<reporting>
 <plugins>
   <plugin>
     <groupId>org.apache.maven.plugins</groupId>
     <artifactId>maven-javadoc-plugin</artifactId>
     <configuration>
       <minmemory>128m</minmemory>
       <maxmemory>512m</maxmemory>
       ...
     </configuration>
   </plugin>
 </plugins>
...
</reporting>
...
</project>
+-----+

 When you execute <<<mvn site>>>, the javadocs will be generated and included in the generated site. A link to the javadocs
 will be added in the Project Reports.

* Generate Standalone Javadocs

 To generate standalone javadocs for the project, you can execute any of the following commands:

+-----+
mvn javadoc:javadoc
+-----+

 or

+-----+
mvn javadoc:jar
+-----+

 For <<<mvn javadoc:jar>>>, the javadocs are generated first then it will be archived in a jar file. The {{{plugin-info.html}javadoc:jar}}
 goal is run by default and is mostly used when releasing to publish to the repository.

 To set the configuration of the Javadoc plugin when executing these commands, you must configure it in the
 \<build\> section of your pom file as shown below:

+-----+
<project>
  ...
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <minmemory>128m</minmemory>
          <maxmemory>512m</maxmemory>
          ...
        </configuration>
      </plugin>
    </plugins>
  ...
  </build>
  ...
</project>
+-----+
