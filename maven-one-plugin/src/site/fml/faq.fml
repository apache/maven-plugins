<?xml version="1.0" encoding="UTF-8"?>

<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<faqs id="FAQ" title="Frequently Asked Questions">
  <part id="General">
    <faq id="question1">
      <question>Will this plugin allow me to use Maven 1.x plugins in Maven 2?</question>
      <answer>
        <p>
          No it will not, but it will allow you to package, install and deploy a
          Maven 1.x plugin using Maven 2.
        </p>
      </answer>
    </faq>
    <faq id="question2">
      <question>
        What's the difference between <code>one:deploy-maven-one-repository</code>
        and <code>deploy:deploy-file</code> with repositoryLayout set to legacy?
      </question>
      <answer>
        <p>
          If you'd use <code>deploy:deploy-file</code> then you'd need to
          configure the file, groupId, artifactId, version for it, whereas with
          this plugin you don't need to configure anything but the repository,
          as it gets the rest from the pom. It's more like
          <code>deploy:deploy</code> than it is <code>deploy:deploy-file</code>.
        </p>
      </answer>
    </faq>
  </part>
</faqs>