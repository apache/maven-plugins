 ------
 Maven 2 PMD Plugin: configuration examples
 ------
 ------
 January 6, 2006

Introduction

  The {{{http://pmd.sourceforge.net/}PMD}} plugin allows you to automatically run the PMD code analysis tool
  on your project's source code and generate a site report with its results.

   * pmd:pmd - run PMD and generate the report

   * pmd:cpd - run PMD's Copy/Paste Detector tool and generate a report

   * pmd:check - verify the PMD report is empty and fail the build if it is not

   * pmd:cpd-check - verify the CPD report is empty and fail the build if it is not

  To include a report with default rule sets and configuration, use:

+--------
<reporting>
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-pmd-plugin</artifactId>
    </plugin>
  </plugins>
</reporting>
+--------

Configuration

  The PMD and CPD reports share the same configuration.  For example, the following
  tells Maven to run the PMD and CPD report as part of the site report generation, use the 'basic' and 'controversial'
  PMD rulesets and output the report in XML format.  The rulesets may reside in the classpath, filesystem or at a URL.
  Note that HTML is always generated in addition to any other alternate format.  Legal formats
  are "html", "csv", "xml" and "txt".
  
  The reports will link directly to the cross-referenced source if you enable this with the linkXRef parameter.
  See the {{{http://maven.apache.org/maven-jxr-plugin/}JXR}} plugin for more details.

  If your source uses a non-default encoding, you can use the sourceEncoding parameter to tell Maven which
  encoding to use when reading the java source.
  
  You can configure the minimum code size which trips the CPD.  The default of 100 tokens cooresponds
  to approxiamately 5-10 lines of code.
  
  Since PMD parses the Java source, it needs to know which Java version to use.  The default is 1.4. The following is a
  possible configuration:

+--------
<reporting>
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-pmd-plugin</artifactId>
      <configuration>
        <rulesets>
          <ruleset>/rulesets/basic.xml</ruleset>
          <ruleset>/rulesets/controversial.xml</ruleset>
          <ruleset>d:\rulesets\strings.xml</ruleset>
          <ruleset>http://localhost/design.xml</ruleset>
        </rulesets>
        <sourceEncoding>utf-8</sourceEncoding>
        <minimumTokens>100</minimumTokens>
        <targetJdk>1.5</targetJdk>
      </configuration>
    </plugin>
  </plugins>
</reporting>
+---------

Violation Checking

  The pmd:check and pmd:cpd-check goals allow you to configure your build to fail if any errors are found in the PMD or
  CPD reports respectively and, in doing so, enforce your own custom code quality rules.

  The following code fragment enables both the standard PMD check and the CPD check in a build, during the <<<verify>>>
  phase.
  
+--------
<build>
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-pmd-plugin</artifactId>
      <executions>
        <execution>
          <goals>
            <goal>check</goal>
            <goal>cpd-check</goal>
          </goals>
        </execution>
      </executions>
    </plugin>
  </plugins>
</build>
+---------

