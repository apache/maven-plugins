
/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import java.io.*;

boolean result = true;

try
{
    File target = new File( basedir, "target" );
    if ( !target.exists() || !target.isDirectory() )
    {
        System.err.println( "Target directory '" + target + "' is missing or not a directory." );
        return false;
    }

    File stagingDirectory = new File ( target, "staging" );
    if ( !stagingDirectory.exists() || !stagingDirectory.isDirectory() )
    {
        System.err.println( "Staging directory '" + stagingDirectory + "' is missing or not a directory." );
        return false;
    }

    String tmpDir = System.getProperty( "java.io.tmpdir" );
    String strippedTmpDir = tmpDir.replaceAll( "[\\:\\?\\*]", "" );

    File parentDirectory = new File ( stagingDirectory, "localhost/" + strippedTmpDir + "/www.example.com/parent" );
    if ( !parentDirectory.exists() || !parentDirectory.isDirectory() )
    {
        System.err.println( "Staging directory for parent '" + parentDirectory + "' is missing or not a directory." );
        return false;
    }

    File childDirectory = new File ( stagingDirectory, "localhost/" + strippedTmpDir + "/www.example.com/parent/child" );
    if ( !childDirectory.exists() || !childDirectory.isDirectory() )
    {
        System.err.println( "Staging directory for child '" + childDirectory + "' is missing or not a directory." );
        return false;
    }

    File stageDeployDirectory = new File ( tmpDir + "/www.example.com/parent" );
    if ( !stageDeployDirectory.exists() || !stageDeployDirectory.isDirectory() )
    {
        System.err.println( "Stage deploy directory '" + stageDeployDirectory + "' is missing or not a directory." );
        return false;
    }

    File validChildStageDeployDirectory = new File ( stageDeployDirectory, "staging/child" );
    if ( !validChildStageDeployDirectory.exists() || !validChildStageDeployDirectory.isDirectory() )
    {
        System.err.println( "Valid stage deploy directory for child '" + validChildStageDeployDirectory + "' is missing or not a directory." );
        return false;
    }

    File invalidChildStageDeployDirectory = new File ( stageDeployDirectory, "child/staging" );
    if ( invalidChildStageDeployDirectory.exists() && invalidChildStageDeployDirectory.isDirectory() )
    {
        System.err.println( "Invalid stage deploy directory for child '" + invalidChildStageDeployDirectory + "' is present." );
        return false;
    }
}
catch( IOException e )
{
    e.printStackTrace();
    result = false;
}

return result;
