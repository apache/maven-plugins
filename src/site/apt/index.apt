 ------
 Introduction
 ------
 Pete Marvin King
 ------
 2008-08-03
 ------
 
~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

Maven WAR Plugin

 The war plugin is responsible for collecting all artifact dependencies, classes
 and resources of the web application and packaging them into a web application archive.
 
* Goals Overview

 * {{{war-mojo.html}war:war}} is the default goal invoked during the package phase for projects with a package type of <<<war>>>.
 
 * {{{exploded-mojo.html}war:exploded}} is generally used to speed up testing during the developement phase by creating
 an exploded war in a specified directory.
 
 * {{{inplace-mojo.html}war:inplace}} another variation of the war:explode where the war is instead generated in the web source directory
 which is <<<src/main/webapp>>> by default.
 
* Usage

  General instructions on how to use the WAR Plugin can be found on the {{{usage.html}usage page}}. Some more
  specific use cases are described in the examples given below. To share common resources across multiple web
  applications, see the documentation about using {{{overlays.html}overlays}}. Last but not least, users occasionally
  contribute additional examples, tips or errata to the
  {{{http://docs.codehaus.org/display/MAVENUSER/WAR+Plugin}plugin's wiki page}}.

  In case you still have questions regarding the plugin's usage, please have a look at the {{{faq.html}FAQ}} and feel
  free to contact the {{{mail-lists.html}user mailing list}}. The posts to the mailing list are archived and could
  already contain the answer to your question as part of an older thread. Hence, it is also worth browsing/searching
  the {{{mail-lists.html}mail archive}}.

  If you feel like the plugin is missing a feature or has a defect, you can fill a feature request or bug report in our
  {{{issue-tracking.html}issue tracker}}. When creating a new issue, please provide a comprehensive description of your
  concern. Especially for fixing bugs it is crucial that the developers can reproduce your problem. For this reason,
  entire debug logs, POMs or most preferably little demo projects attached to the issue are very much appreciated.
  Of course, patches are welcome, too. Contributors can check out the project from our
  {{{source-repository.html}source repository}} and will find supplementary information in the
  {{{http://maven.apache.org/guides/development/guide-helping.html}guide to helping with Maven}}.

* Examples
 
 To provide you with better understanding on some usages of the Maven WAR Plugin,
 you can take a look into the following examples:
 
 * {{{examples/adding-filtering-webresources.html}Adding and Filtering External Web Resources}}
 
 * {{{examples/war-manifest-guide.html}WAR Manifest Customization}}

 * {{{examples/rapid-testing-jetty6-plugin.html}Rapid Testing Using Jetty6}}

 * {{{examples/skinny-wars.html}Creating Skinny WARs}}
 
 * {{{examples/file-name-mapping.html}Using File Name Mapping}}

* Related links
 
  * {{{http://maven.apache.org/guides/mini/guide-archive-configuration.html}Exclusion of Maven Descriptors}}
 
